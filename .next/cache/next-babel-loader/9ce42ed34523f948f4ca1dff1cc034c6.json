{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\cursos\\\\ImersaoCelke\\\\web\\\\pages\\\\cadastrar.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nfunction cadastrar() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: ''\n  }),\n      meta = _useState[0],\n      setMeta = _useState[1];\n\n  var onChangeInput = function onChangeInput(e) {\n    return setMeta(_objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var sendMeta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var response, responseEnv;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(meta);\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('http://localhost:8080/metas', {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              response = _context.sent;\n              console.log('passou aqui');\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              responseEnv = _context.sent;\n\n              if (responseEnv.error) {\n                console.log(responseEnv.message);\n              } else {\n                console.log(responseEnv.message);\n              }\n\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n              console.log('Erro: meta nÃ£o cadastrada com sucesso', _context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    }));\n\n    return function sendMeta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar minha meta.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMeta,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Nome da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Descri\\xE7\\xE3o da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        placeholder: \"Status da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(cadastrar, \"jA5c+5U0FYOJSESVcI2FPlH226E=\");\n\nexport default cadastrar;","map":{"version":3,"sources":["D:/cursos/ImersaoCelke/web/pages/cadastrar.js"],"names":["React","useState","cadastrar","name","description","status","meta","setMeta","onChangeInput","e","target","value","sendMeta","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","response","json","responseEnv","error","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction cadastrar() {\r\n\r\n  const [meta, setMeta] = useState({\r\n    name: '',\r\n    description: '',\r\n    status: ''\r\n  });\r\n\r\n  const onChangeInput = e => setMeta({ ...meta, [e.target.name]: e.target.value });\r\n  const sendMeta = async e => {\r\n    e.preventDefault();\r\n    console.log(meta);\r\n    try {\r\n      const response = await fetch('http://localhost:8080/metas', {\r\n        method: 'POST',\r\n        body: JSON.stringify(meta),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      console.log('passou aqui');\r\n      const responseEnv = await response.json();\r\n      if(responseEnv.error){\r\n        console.log(responseEnv.message);\r\n      }else{\r\n        console.log(responseEnv.message);\r\n      }\r\n    } catch (error) {\r\n      console.log('Erro: meta nÃ£o cadastrada com sucesso', error)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Cadastrar minha meta.</h1>\r\n      <hr />\r\n\r\n      <form onSubmit={sendMeta}>\r\n        <label>Nome</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Nome da meta\"\r\n          onChange={onChangeInput}\r\n        /> <br /> <br />\r\n\r\n        <label>DescriÃ§Ã£o</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"DescriÃ§Ã£o da meta\"\r\n          onChange={onChangeInput}\r\n        /><br /> <br />\r\n\r\n        <label>Status</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"status\"\r\n          placeholder=\"Status da meta\"\r\n          onChange={onChangeInput}\r\n        /><br /> <br />\r\n\r\n        <button type=\"submit\">Cadastrar</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default cadastrar"]},"metadata":{},"sourceType":"module"}