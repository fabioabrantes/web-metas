{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\cursos\\\\ImersaoCelke\\\\web\\\\pages\\\\cadastrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\n\nfunction cadastrar() {\n  const {\n    0: meta,\n    1: setMeta\n  } = useState({\n    name: '',\n    description: '',\n    status: ''\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  });\n\n  const onChangeInput = e => setMeta(_objectSpread(_objectSpread({}, meta), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const sendMeta = async e => {\n    e.preventDefault();\n    setResponse({\n      formSave: true\n    });\n\n    try {\n      const res = await fetch('http://localhost:8080/metas', {\n        method: 'POST',\n        body: JSON.stringify(meta),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      const responseEnv = await res.json();\n\n      if (responseEnv.error) {\n        setResponse({\n          formSave: false,\n          type: 'error',\n          message: responseEnv.message\n        });\n      } else {\n        setResponse({\n          formSave: false,\n          type: 'success',\n          message: responseEnv.message\n        });\n      }\n    } catch (error) {\n      setResponse({\n        formSave: false,\n        type: 'error',\n        message: 'Erro: meta n√£o cadastrada com sucesso'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar minha meta.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), response.type === 'error' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", response.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 35\n    }, this) : \"\", response.type === 'success' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", response.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 36\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMeta,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Nome da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"Descri\\xE7\\xE3o da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        id: \"status\",\n        placeholder: \"Status da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 18\n      }, this), response.formSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviando ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default cadastrar;","map":{"version":3,"sources":["D:/cursos/ImersaoCelke/web/pages/cadastrar.js"],"names":["React","useState","cadastrar","meta","setMeta","name","description","status","response","setResponse","formSave","type","message","onChangeInput","e","target","value","sendMeta","preventDefault","res","fetch","method","body","JSON","stringify","headers","responseEnv","json","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction cadastrar() {\r\n\r\n  const [meta, setMeta] = useState({\r\n    name: '',\r\n    description: '',\r\n    status: ''\r\n  });\r\n\r\n  const [response, setResponse] = useState({\r\n    formSave:false,\r\n    type:'',\r\n    message:''\r\n  })\r\n\r\n  const onChangeInput = e => setMeta({ ...meta, [e.target.name]: e.target.value });\r\n\r\n  const sendMeta = async (e) => {\r\n    e.preventDefault();\r\n    setResponse({formSave:true});\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:8080/metas', {\r\n        method: 'POST',\r\n        body: JSON.stringify(meta),\r\n        headers: { 'Accept': 'application/json','Content-Type': 'application/json' }\r\n      });\r\n      \r\n      const responseEnv = await res.json();\r\n      if (responseEnv.error) {\r\n        setResponse({\r\n          formSave:false,\r\n          type:'error',\r\n          message:responseEnv.message\r\n        });\r\n      } else {\r\n        setResponse({\r\n          formSave:false,\r\n          type:'success',\r\n          message:responseEnv.message\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setResponse({\r\n        formSave:false,\r\n        type:'error',\r\n        message:'Erro: meta n√£o cadastrada com sucesso'\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Cadastrar minha meta.</h1>\r\n      <hr />\r\n      {\r\n        response.type ==='error'? <p> {response.message}</p>:\"\"\r\n      }\r\n      {response.type ==='success'? <p> {response.message}</p>:\"\"}\r\n\r\n      <form onSubmit={sendMeta}>\r\n        <label>Nome</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"Nome da meta\"\r\n          onChange={onChangeInput}\r\n        /> <br /> <br />\r\n\r\n        <label>Descri√ß√£o</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\" \r\n          id=\"description\"\r\n          placeholder=\"Descri√ß√£o da meta\"\r\n          onChange={onChangeInput}\r\n        /><br /> <br />\r\n\r\n        <label>Status</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"status\" \r\n          id=\"status\"\r\n          placeholder=\"Status da meta\"\r\n          onChange={onChangeInput}\r\n        /><br /> <br />\r\n        \r\n        {response.formSave?<button type=\"submit\">Enviando ... </button>:<button type=\"submit\">Cadastrar</button> }\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default cadastrar"]},"metadata":{},"sourceType":"module"}