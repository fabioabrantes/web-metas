{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\cursos\\\\ImersaoCelke\\\\web\\\\pages\\\\cadastrar.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport 'reactstrap';\n\nfunction cadastrar() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: ''\n  }),\n      meta = _useState[0],\n      setMeta = _useState[1];\n\n  var _useState2 = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  }),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var onChangeInput = function onChangeInput(e) {\n    return setMeta(_objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var sendMeta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, responseEnv;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              setResponse({\n                formSave: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('http://localhost:8080/metas', {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              responseEnv = _context.sent;\n\n              if (responseEnv.error) {\n                setResponse({\n                  formSave: false,\n                  type: 'error',\n                  message: responseEnv.message\n                });\n              } else {\n                setResponse({\n                  formSave: false,\n                  type: 'success',\n                  message: responseEnv.message\n                });\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              setResponse({\n                formSave: false,\n                type: 'error',\n                message: 'Erro: meta nÃ£o cadastrada com sucesso'\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n\n    return function sendMeta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar minha meta.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), response.type === 'error' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", response.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 35\n    }, this) : \"\", response.type === 'success' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", response.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 36\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMeta,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Nome da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"Descri\\xE7\\xE3o da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        id: \"status\",\n        placeholder: \"Status da meta\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 18\n      }, this), response.formSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: true,\n        children: \"Enviando ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 82\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(cadastrar, \"VvpKBtLNy7DfAmEuabW7dYIziqU=\");\n\nexport default cadastrar;","map":{"version":3,"sources":["D:/cursos/ImersaoCelke/web/pages/cadastrar.js"],"names":["React","useState","cadastrar","name","description","status","meta","setMeta","formSave","type","message","response","setResponse","onChangeInput","e","target","value","sendMeta","preventDefault","fetch","method","body","JSON","stringify","headers","res","json","responseEnv","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {} from 'reactstrap'\r\n\r\nfunction cadastrar() {\r\n\r\n  const [meta, setMeta] = useState({\r\n    name: '',\r\n    description: '',\r\n    status: ''\r\n  });\r\n\r\n  const [response, setResponse] = useState({\r\n    formSave:false,\r\n    type:'',\r\n    message:''\r\n  })\r\n\r\n  const onChangeInput = e => setMeta({ ...meta, [e.target.name]: e.target.value });\r\n\r\n  const sendMeta = async (e) => {\r\n    e.preventDefault();\r\n    setResponse({formSave:true});\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:8080/metas', {\r\n        method: 'POST',\r\n        body: JSON.stringify(meta),\r\n        headers: { 'Accept': 'application/json','Content-Type': 'application/json' }\r\n      });\r\n      \r\n      const responseEnv = await res.json();\r\n      if (responseEnv.error) {\r\n        setResponse({\r\n          formSave:false,\r\n          type:'error',\r\n          message:responseEnv.message\r\n        });\r\n      } else {\r\n        setResponse({\r\n          formSave:false,\r\n          type:'success',\r\n          message:responseEnv.message\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setResponse({\r\n        formSave:false,\r\n        type:'error',\r\n        message:'Erro: meta nÃ£o cadastrada com sucesso'\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Cadastrar minha meta.</h1>\r\n      <hr />\r\n      {\r\n        response.type ==='error'? <p> {response.message}</p>:\"\"\r\n      }\r\n      {response.type ==='success'? <p> {response.message}</p>:\"\"}\r\n\r\n      <form onSubmit={sendMeta}>\r\n        <label>Nome</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"Nome da meta\"\r\n          onChange={onChangeInput}\r\n        /> <br /> <br />\r\n\r\n        <label>DescriÃ§Ã£o</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\" \r\n          id=\"description\"\r\n          placeholder=\"DescriÃ§Ã£o da meta\"\r\n          onChange={onChangeInput}\r\n        /><br /> <br />\r\n\r\n        <label>Status</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"status\" \r\n          id=\"status\"\r\n          placeholder=\"Status da meta\"\r\n          onChange={onChangeInput}\r\n        /><br /> <br />\r\n        \r\n        {response.formSave?<button type=\"submit\" disabled>Enviando ... </button>:<button type=\"submit\">Cadastrar</button> }\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default cadastrar"]},"metadata":{},"sourceType":"module"}